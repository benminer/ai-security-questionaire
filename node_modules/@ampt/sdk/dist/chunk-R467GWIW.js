import { createRequire as topLevelCreateRequire } from 'module'
const require = topLevelCreateRequire(import.meta.url || __dirname)
import {
  getInvocationId,
  getInvocationType
} from "./chunk-6I7VLTO4.js";

// ../../lib/runtime-logging/index.ts
function systemError(errOrMsg, _msg) {
  const err = typeof errOrMsg === "string" ? void 0 : errOrMsg;
  const msg = typeof errOrMsg === "string" ? errOrMsg : _msg;
  const reqId = getInvocationId();
  const type = getInvocationType() || "system";
  process.stdout.write(
    JSON.stringify({
      _slsLog: true,
      time: Date.now(),
      level: 50,
      msg,
      reqId,
      type,
      ...err && { err: { message: err.message, stack: err.stack, code: err.code, name: err.name } }
    }) + "\n"
  );
}
function systemLog(objOrMsg, _msg) {
  const obj = typeof objOrMsg === "string" ? {} : objOrMsg;
  const msg = typeof objOrMsg === "string" ? objOrMsg : _msg;
  const reqId = getInvocationId();
  const type = getInvocationType() || "system";
  const { err, ...rest } = obj;
  const defaultLevel = err ? 50 : 30;
  process.stdout.write(
    JSON.stringify({
      _slsLog: true,
      time: Date.now(),
      level: defaultLevel,
      reqId,
      type,
      msg,
      ...err && { err: { message: err.message, stack: err.stack, code: err.code, name: err.name } },
      ...rest
    }) + "\n"
  );
}
function applicationWarning(errOrMsg, _msg) {
  const err = typeof errOrMsg === "string" ? void 0 : errOrMsg;
  const msg = typeof errOrMsg === "string" ? errOrMsg : _msg;
  const reqId = getInvocationId();
  const type = getInvocationType() || "system";
  process.stdout.write(
    JSON.stringify({
      time: Date.now(),
      level: 40,
      reqId,
      type,
      msg,
      ...err && { err: { message: err.message, stack: err.stack, code: err.code, name: err.name } }
    }) + "\n"
  );
}

export {
  systemError,
  systemLog,
  applicationWarning
};
